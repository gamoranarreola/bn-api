# Generated by Django 3.2.5 on 2021-08-23 16:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=128, unique=True)),
                ('phone', models.CharField(blank=True, max_length=64)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_profile_id', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_date', models.CharField(max_length=10, null=True)),
                ('service_time', models.CharField(max_length=8, null=True)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=512)),
                ('extras', models.CharField(max_length=512)),
                ('includes_eyelashes', models.BooleanField(default=False)),
                ('availability', models.JSONField()),
                ('duration', models.TimeField()),
                ('beautier_price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('beauty_now_price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('public_price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Specialties',
            },
        ),
        migrations.CreateModel(
            name='StaffAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('line_item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bn_app.lineitem')),
            ],
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.CharField(max_length=10, null=True)),
                ('request_time', models.CharField(max_length=8, null=True)),
                ('place_id', models.CharField(max_length=512, null=True)),
                ('notes', models.CharField(blank=True, max_length=256)),
                ('status', models.CharField(default='initial_request', max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bn_app.customerprofile')),
                ('line_items', models.ManyToManyField(to='bn_app.LineItem')),
            ],
        ),
        migrations.CreateModel(
            name='StaffLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_out', models.DecimalField(decimal_places=2, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('staff_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bn_app.staffassignment')),
            ],
        ),
        migrations.AddField(
            model_name='staffassignment',
            name='staff_lines',
            field=models.ManyToManyField(to='bn_app.StaffLine'),
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('panel', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('services', models.ManyToManyField(to='bn_app.Service')),
            ],
            options={
                'verbose_name_plural': 'Service Categories',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bn_app.servicecategory'),
        ),
        migrations.AddField(
            model_name='service',
            name='specialties',
            field=models.ManyToManyField(to='bn_app.Specialty'),
        ),
        migrations.AddField(
            model_name='lineitem',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bn_app.service'),
        ),
        migrations.AddField(
            model_name='lineitem',
            name='staff_assignments',
            field=models.ManyToManyField(to='bn_app.StaffAssignment'),
        ),
        migrations.CreateModel(
            name='CustomerProfileAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_id', models.CharField(max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bn_app.customerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BeautierProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_id', models.CharField(max_length=128, null=True)),
                ('availability', models.JSONField(default=dict)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('specialties', models.ManyToManyField(to='bn_app.Specialty')),
            ],
        ),
        migrations.AddConstraint(
            model_name='staffassignment',
            constraint=models.UniqueConstraint(fields=('line_item', 'index'), name='line_item_index'),
        ),
    ]
